port: 7890 # HTTP 代理端口
socks-port: 7891 # Socks 端口
redir-port: 7892 # Redir 端口
mixed-port: 7893 # 混合端口
allow-lan: true # 允许局域网连接
bind-address: "*" # 地址绑定
mode: rule # 规则模式
log-level: info # 日志级别
ipv6: true # IPV6开关
profile:
  store-selected: true
  store-fake-ip: true
unified-delay: true
tcp-concurrent: true

external-controller: 127.0.0.1:9090
external-ui: ui
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"
secret: "" # webui密码

geodata-mode: true
geox-url:
  geoip: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  geosite: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"
  asn: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"
geo-update-interval: 24
geodata-loader: standard

tun:
  enable: true
  stack: mixed
  auto-route: true
  auto-detect-interface: true
  dns-hijack:
    - any:53
    - tcp://any:53

dns:
  enable: true # 不使用系统 DNS
  ipv6: true # 开启 IPV6
  listen: 0.0.0.0:53 # dns 监听
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - "+.cuhk.edu.cn"
    - "*.lan"
    - localhost.ptlogin2.qq.com
    - +.srv.nintendo.net
    - +.stun.playstation.net
    - +.msftconnecttest.com
    - +.msftncsi.com
    - +.xboxlive.com
    - msftconnecttest.com
    - xbox.*.microsoft.com
    - "*.battlenet.com.cn"
    - "*.battlenet.com"
    - "*.blzstatic.cn"
    - "*.battle.net"
  nameserver: # 默认 DNS 服务
    - 223.5.5.5
    - 119.29.29.29
  fallback: # 国外 DNS 服务器
    - https://cloudflare-dns.com/dns-query
    - https://dns.google/dns-query
    - https://dns.alidns.com/dns-query
  nameserver-policy:
    "*.cuhk.edu.cn": "10.20.220.50"
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4
#========= 建立锚点 =========#

# 策略组引用
pr: &a3 { type: select, proxies: [🚀 手动切换, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, DIRECT] }
p: &a1 { type: http, interval: 86400, health-check: { enable: true, url: http://www.gstatic.com/generate_204, interval: 1800 } }
auto: &a4 { type: url-test, lazy: true, url: http://www.gstatic.com/generate_204, interval: 900, use: [Sub] }
use: &a2 { type: select, use: [Sub] }
c: &a6 { type: http, behavior: classical, interval: 86400 }
d: &a5 { type: http, behavior: domain, format: mrs, interval: 86400 }
i: &a7 { type: http, behavior: ipcidr, interval: 86400 }

proxies:
  - name: "🏫 cuhksz" # 节点名字，可以自己取
    type: socks5 # 代理类型，ocproxy -D 创建的是 socks5
    server: 127.0.0.1 # 服务器地址，就是本机
    port: 11080 # 端口号，必须和你命令中 -D 11080 设置的一致
    udp: true # 强烈建议开启，兼容性更好

proxy-providers:
  Sub:
    <<: *a1
    url:
    path: ./proxy_providers/sub.yaml

proxy-groups:
  #分流分组
  - { name: 🚀 手动切换, <<: *a2 }
  - { name: 🌏 全球加速, <<: *a3 }
  - { name: 🍎 苹果服务, <<: *a3 }
  - { name: 🎨 Adobe, type: select, proxies: [DIRECT, 🇺🇲 美国节点] }
  - { name: 📺 哔哩哔哩, type: select, proxies: [DIRECT, 🇭🇰 香港节点, 🇨🇳 台湾节点] }
  - { name: 🤖 Ai, type: select, proxies: [🇺🇲 美国节点] }
  - { name: 🎵 Spotify, type: select, proxies: [🇺🇲 美国节点] }
  - { name: 🌌 谷歌服务, <<: *a3 }
  - { name: 📟 电报消息, <<: *a3 }
  - { name: 🐦 推特服务, <<: *a3 }
  - { name: 🎮 游戏平台, <<: *a3 }
  - { name: 🆎 AdBlock, type: select, proxies: [REJECT] }
  - { name: 🐟 兜底分流, <<: *a3 }
  - { name: "🎓 校内专线", type: select, proxies: [🏫 cuhksz, DIRECT] }

  #节点分组
  - { name: 🇭🇰 香港节点, <<: *a2, filter: "(?i)港|hk|hong" } # a4更改为a2，即为手动选择
  - { name: 🇯🇵 日本节点, <<: *a2, filter: "(?i)日本|东京|jp|japan" } # a4更改为a2，即为手动选择
  - { name: 🇨🇳 台湾节点, <<: *a2, filter: "(?i)台|湾|tw|taiwan" } # a4更改为a2，即为手动选择
  - { name: 🇺🇲 美国节点, <<: *a2, filter: "(?i)美国|us|states|american" } # a4更改为a2，即为手动选择
  - { name: 🇸🇬 狮城节点, <<: *a2, filter: "(?i)新加坡|狮城|sg|singapore" } # a4更改为a2，即为手动选择

# 分流规则
rule-providers:
  Ad: { <<: *a5, url: https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules-mihomo.mrs, path: ./ruleset/anti-ad-clash.yaml }
  Ai: { <<: *a6, url: https://gist.githubusercontent.com/ddgksf2013/cb4121e8b5c5d865cc949cb8120320c4/raw/Ai.yaml, path: ./ruleset/Ai.yaml }
  Spotify: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Spotify/Spotify.yaml, path: ./ruleset/Spotify.yaml }
  Adobe: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Adobe/Adobe.yaml, path: ./ruleset/Adobe.yaml }
  BiliBili: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/BiliBili/BiliBili.yaml, path: ./ruleset/BiliBili.yaml }
  Apple: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Apple/Apple_Classical.yaml, path: ./ruleset/Apple.yaml }
  Github: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GitHub/GitHub.yaml, path: ./ruleset/Github.yaml }
  Microsoft: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Microsoft/Microsoft.yaml, path: ./ruleset/Microsoft.yaml }
  Google: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Google/Google.yaml, path: ./ruleset/Google.yaml }
  Telegram: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Telegram/Telegram.yaml, path: ./ruleset/Telegram.yaml }
  Twitter: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Twitter/Twitter.yaml, path: ./ruleset/Twitter.yaml }
  Game: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Game/Game.yaml, path: ./ruleset/Game.yaml }
  ProxyLite: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/ProxyLite/ProxyLite.yaml, path: ./ruleset/ProxyLite.yaml }
  Direct: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Direct/Direct.yaml, path: ./ruleset/Direct.yaml }
  Lan: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Lan/Lan.yaml, path: ./ruleset/Lan.yaml }
  Download: { <<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Download/Download.yaml, path: ./ruleset/Download.yaml }
  ChinaIP: { <<: *a7, url: https://cdn.jsdelivr.net/gh/soffchen/GeoIP2-CN@release/clash-rule-provider.yml, path: ./ruleset/ChinaIP.yaml }
  School: { <<: *a6, url: https://cdn.jsdelivr.net/gh/Carsonn-Chen/cuhksz_clash@main/School_Rules.yaml, path: ./ruleset/School.yaml }
  Journal: { <<: *a6, url: https://cdn.jsdelivr.net/gh/Carsonn-Chen/cuhksz_clash@main/Academic_Journal.yaml, path: ./ruleset/Journal.yaml }

# 分流Policy
rules:
  - DST-PORT,22,🎓 校内专线
  - DOMAIN-SUFFIX,vpn.cuhk.edu.cn,DIRECT
  - RULE-SET,School,🎓 校内专线
  - RULE-SET,Journal,🎓 校内专线
  - RULE-SET,Ad,🆎 AdBlock
  - RULE-SET,Ai,🤖 Ai
  - RULE-SET,Adobe,🎨 Adobe
  - RULE-SET,BiliBili,📺 哔哩哔哩
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,Github,🌏 全球加速
  - RULE-SET,Microsoft,DIRECT
  - RULE-SET,Google,🌌 谷歌服务
  - RULE-SET,Telegram,📟 电报消息
  - RULE-SET,Twitter,🐦 推特服务
  - RULE-SET,Game,🎮 游戏平台
  - RULE-SET,ProxyLite,🌏 全球加速
  - RULE-SET,Direct,DIRECT
  - RULE-SET,Lan,DIRECT
  - RULE-SET,Download,DIRECT
  - RULE-SET,ChinaIP,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,🐟 兜底分流
